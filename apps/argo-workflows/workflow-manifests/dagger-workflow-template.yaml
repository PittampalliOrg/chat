apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: dagger-template
  namespace: argo
spec:
  securityContext:
    fsGroup: 1000
  volumes:
    - name: dagger-socket
      emptyDir: {}
    - name: dagger-storage
      emptyDir: {}
    - name: tmp-volume
      emptyDir: {}
  templates:
    - name: dagger-workflow-base
      sidecars:
        - name: dagger-engine
          image: registry.dagger.io/engine:v0.18.8
          securityContext:
            privileged: true
            runAsUser: 0
          readinessProbe:
            exec:
              command: ["sh", "-c", "test -S /run/dagger/engine.sock || false"]
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - {mountPath: /run/dagger, name: dagger-socket}
            - {mountPath: /var/lib/dagger, name: dagger-storage}
            - {mountPath: /tmp, name: tmp-volume}
      inputs:
        parameters:
          - name: dagger-module
            description: "Dagger module to use"
          - name: dagger-function
            description: "Dagger function to call"
          - name: source-repo
            description: "Git repository containing source code"
          - name: source-revision
            default: "main"
            description: "Git revision for source code"
        artifacts:
          - name: dagger-cli
            path: /usr/local/bin
            mode: 0755
            http: {url: "https://github.com/dagger/dagger/releases/download/v0.18.6/dagger_v0.18.6_linux_amd64.tar.gz"}
      container:
        image: alpine:latest
        workingDir: /work
        command: ["sh","-c"]
        args: ["ls -la /run/dagger && sleep 5 && dagger -m {{inputs.parameters.dagger-module}} call {{inputs.parameters.dagger-function}} --source=."]
        env:
          - {name: _EXPERIMENTAL_DAGGER_RUNNER_HOST, value: unix:///run/dagger/engine.sock}
        volumeMounts:
          - {mountPath: /run/dagger, name: dagger-socket}
          - {mountPath: /tmp, name: tmp-volume}
