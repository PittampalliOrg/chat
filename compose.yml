# compose.yml  – switch stack with:  docker compose --profile dev|prod up -d

networks:
  production:
    external: true

volumes:
  postgres-data:

services:
##############################################################################
#  FRONTEND – two variants, each with its own side-car                       #
##############################################################################

# ──────────── DEV ───────────────────────────────────────────────────────────
  frontend-dev:
    profiles: ["dev"]
    image: plugin                       # mounts your source; runs “pnpm dev”
    volumes: [".:/workspace"]
    command: sleep infinity             # (or ["pnpm","dev"])
    ports: ["3000:3000", "50002:50002"]
    depends_on: [redis, db]
    networks: [production]

  frontend-dapr-dev:
    profiles: ["dev"]
    image: daprio/daprd:latest
    network_mode: "service:frontend-dev"
    command:
      ["./daprd",
       "-app-id", "frontend",
       "-app-port", "3000",
       "-dapr-grpc-port", "50002",
       "-components-path", "/components",
       "-log-level", "debug"]
    volumes:
      - "./dapr/components:/components"
      - "./dapr/secrets:/secrets"
    depends_on: [frontend-dev, redis]

# ──────────── PROD ──────────────────────────────────────────────────────────
  frontend-prod:
    profiles: ["prod"]
    build:
      context: .
      target: runner
      args:
        NODE_ENV: ${NODE_ENV:-production}
        DAPR_HTTP_PORT: ${DAPR_HTTP_PORT:-3500}
        DAPR_GRPC_PORT: ${DAPR_GRPC_PORT:-50002}
        CONNECTION_STATESTORE_COMPONENTNAME: ${CONNECTION_STATESTORE_COMPONENTNAME:-statestore}
        CONNECTION_POSTGRESQL_HOST: ${CONNECTION_POSTGRESQL_HOST:-db}
        CONNECTION_POSTGRESQL_PORT: ${CONNECTION_POSTGRESQL_PORT:-5432}
        CONNECTION_POSTGRESQL_USERNAME: ${CONNECTION_POSTGRESQL_USERNAME:-postgres}
        CONNECTION_POSTGRESQL_PASSWORD: ${CONNECTION_POSTGRESQL_PASSWORD:-postgres}
        CONNECTION_POSTGRESQL_DATABASE: ${CONNECTION_POSTGRESQL_DATABASE:-postgres}
    image: vpittamp.azurecr.io/chat-frontend:0.1.6
    ports: ["3000:3000", "50002:50002"]
    depends_on: [db, redis]
    networks: [production]

  frontend-dapr-prod:
    profiles: ["prod"]
    image: daprio/daprd:latest
    network_mode: "service:frontend-prod"
    command:
      ["./daprd",
       "-app-id", "frontend",
       "-app-port", "3000",
       "-dapr-grpc-port", "50002",
       "-components-path", "/components",
       "-log-level", "debug"]
    volumes:
      - "./dapr/components:/components"
      - "./dapr/secrets:/secrets"
    depends_on: [frontend-prod, redis]

##############################################################################
#  COMMON SERVICES (always started)                                          #
##############################################################################

  redis:
    image: redis:alpine
    ports: ["6379:6379"]
    networks: [production]

  db:
    image: postgres:latest
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:       postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./lib/db/migrations:/docker-entrypoint-initdb.d:ro
    networks: [production]

  dashboard:
    image: daprio/dashboard:latest
    command:
      ["./dashboard",
       "--listen-address", "0.0.0.0:8080",
       "--resources-path",  "/home/nonroot/.dapr/components",
       "--docker-compose-path", "/compose/compose.yml"]
    volumes:
      - ./compose.yml:/compose/compose.yml:ro
      - ./dapr/components:/home/nonroot/.dapr/components
    ports: ["8080:8080"]
    depends_on: [redis]                 # side-cars are profile-specific
    networks: [production]
