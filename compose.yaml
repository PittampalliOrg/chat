# compose.yml  – switch stack with:  docker compose --profile dev|prod up -d

networks:
  kind:
    external: true

volumes:
  postgres-data:

services:
##############################################################################
#  FRONTEND – two variants, each with its own side-car                       #
##############################################################################

# ──────────── DEV ───────────────────────────────────────────────────────────
  frontend-dev:
    # profiles: ["dev"]
    image: kind 
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker-host.sock
    # environment:
    #   - POSTGRES_URL=${DEV_POSTGRES_URL}
    #   - AUTH_SECRET=${AUTH_SECRET}
    #   - XAI_API_KEY=${XAI_API_KEY}
    #   - BLOB_READ_WRITE_TOKEN="****"
    #   - REDIS_URL=redis://redis:6379
    env_file:
      - ./.devcontainer/wi.env
      - ./.devcontainer/devcontainer.env
      - ./.devcontainer/azure.sp.env
    command: sleep infinity # (or ["pnpm","dev"])
    ports: ["3000:3000"]
    depends_on: [redis, db]
    networks: [kind]

  # frontend-dapr-dev:
  #   profiles: ["dev"]
  #   image: daprio/daprd:latest
  #   network_mode: "service:frontend-dev"
  #   command:
  #     ["./daprd",
  #      "-app-id", "frontend",
  #      "-app-port", "3000",
  #      "-dapr-grpc-port", "50002",
  #      "-components-path", "/components",
  #      "-log-level", "debug"]
  #   volumes:
  #     - "./dapr/components:/components"
  #     - "./dapr/secrets:/secrets"
  #   depends_on: [frontend-dev, redis]

# ──────────── PROD ──────────────────────────────────────────────────────────
  # frontend-prod:
  #   profiles: ["prod"]
  #   build:
  #     context: .
  #     target: runner
  #     args:
  #     - POSTGRES_URL=${DEV_POSTGRES_URL}
  #     - AUTH_SECRET=${AUTH_SECRET}
  #     - XAI_API_KEY=${XAI_API_KEY}
  #     - BLOB_READ_WRITE_TOKEN="****"
  #     - REDIS_URL=redis://redis:6379
  #   image: vpittamp.azurecr.io/chat-frontend:0.2.3
  #   ports: ["3000:3000"]
  #   # depends_on: [db, redis]
  #   networks: [kind]

  # frontend-dapr-prod:
  #   profiles: ["prod"]
  #   image: daprio/daprd:latest
  #   network_mode: "service:frontend-prod"
  #   command:
  #     ["./daprd",
  #      "-app-id", "frontend",
  #      "-app-port", "3000",
  #      "-dapr-grpc-port", "50002",
  #      "-components-path", "/components",
  #      "-log-level", "debug"]
  #   volumes:
  #     - "./dapr/components:/components"
  #     - "./dapr/secrets:/secrets"
  #   depends_on: [frontend-prod, redis]

##############################################################################
#  COMMON SERVICES (always started)                                          #
##############################################################################

  redis:
    image: redis:alpine
    ports: ["6379:6379"]
    networks: [kind]

  db:
    image: postgres:latest
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:       postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./lib/db/migrations:/docker-entrypoint-initdb.d:ro
    networks: [kind]

  dashboard:
    image: daprio/dashboard:latest
    command:
      ["./dashboard",
       "--listen-address", "0.0.0.0:8080",
       "--resources-path",  "/home/nonroot/.dapr/components",
       "--docker-compose-path", "/compose/compose.yml"]
    volumes:
      - ./compose.yml:/compose/compose.yml:ro
      - ./dapr/components:/home/nonroot/.dapr/components
    ports: ["8082:8080"]
    depends_on: [redis]                 # side-cars are profile-specific
    networks: [kind]
