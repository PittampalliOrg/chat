// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/kubernetes-helm
{
	"name": "Kubernetes - Local Configuration",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/universal:linux",
	"onCreateCommand": "bash ./.devcontainer/on-create.sh",
	"postCreateCommand": "bash ./.devcontainer/post-create.sh",
"runArgs": [
  "--privileged",
  "--init",
  "--add-host", "host.docker.internal:host-gateway",
  "--add-host", "kubernetes.docker.internal:host-gateway"
],

	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"enableNonRootDocker": "true",
			"moby": "true"
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "latest",
			"helm": "latest",
			"minikube": "none"
		},
		"./local-features/copy-kube-config": {},   
		"ghcr.io/devcontainers/features/azure-cli:1": {},
		"ghcr.io/devcontainers/features/github-cli": {}
	},
	"remoteEnv": {
		"SYNC_LOCALHOST_KUBECONFIG": "true",
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	"initializeCommand": "cd .devcontainer && bash ensure-mount-sources",
	"mounts": [
		{
			"source": "${env:HOME}${env:USERPROFILE}/.kube",
			"target": "/usr/local/share/kube-localhost",
			"type": "bind"
		},
		{
			"source": "${env:HOME}${env:USERPROFILE}/.minikube",
			"target": "/usr/local/share/minikube-localhost",
			"type": "bind"
		},
		{
			"source": "profile",
			"target": "/root",
			"type": "volume"
		},
		{
			"target": "/root/.vscode-server",
			"type": "volume"
		}
	],
	"customizations": {
		"vscode": {
			"extensions": [
				"vscode.typescript-language-features",
				"GitHub.copilot",
				"denoland.vscode-deno",
				"Supabase.vscode-supabase-extension",
				"ms-azuretools.vscode-docker",
				"dbaeumer.vscode-eslint",
				"Postman.postman-for-vscode",
				"ms-edgedevtools.vscode-edge-devtools",
				"tamasfe.even-better-toml",
				"eamodio.gitlens",
				"ms-playwright.playwright",
				"ms-toolsai.jupyter",
				"ms-graph.kiota",
				"ms-vscode.azure-account",
				"mutantdino.resourcemonitor",
				"github.vscode-github-actions",
				"bradlc.vscode-tailwindcss",
				"ms-vscode.vscode-typescript-next",
				"ms-azuretools.vscode-dapr",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg",
				"ms-azuretools.vscode-azure-github-copilot",
				"mikeedjones.copy-file-to-chat",
				"ms-python.python",
				"ultram4rine.sqltools-clickhouse-driver",
				"Grafana.vscode-jsonnet",
				"phidn.vsc-copy-ai",
				"cweijan.vscode-redis-client",
				"ms-kubernetes-tools.vscode-aks-tools",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"ms-vscode.vscode-node-azure-pack",
				"ms-azuretools.vscode-azureresourcegroups",
				"ms-kubernetes-tools.kind-vscode"
			],
			"settings": {
				"sqltools.connections": [
					{
						"driver": "PostgreSQL",
						"name": "PostgreSQL",
						"server": "db",
						"port": 5432,
						"database": "postgres",
						"username": "postgres",
						"password": "postgres",
						"askForPassword": false
					},
					{
						"driver": "PostgreSQL",
						"name": "PostgreSQL",
						"server": "vinodvm.postgres.database.azure.com",
						"port": 5432,
						"database": "postgres",
						"username": "vpittamp",
						"askForPassword": true
					}
				]
			}
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "kubectl version",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root"
}