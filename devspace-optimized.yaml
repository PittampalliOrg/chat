version: v2beta1
name: chat

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments")

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  app:
    image: vpittamp.azurecr.io/chat-frontend
    dockerfile: ./Dockerfile

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - ./resources/nextjs/base/**
        - ./resources/postgres/base/**
        - ./resources/redis/base/**

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    imageSelector: vpittamp.azurecr.io/chat-frontend
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: vpittamp.azurecr.io/kind:2
    
    # Simplified sync configuration - sync everything except what we don't need
    sync:
      - path: .:/workspace
        excludePaths:
          - .devcontainer/
          - .devspace/
          - .git/
          - .vscode/
          - node_modules/
          - .next/
          - .pnpm-store/
          - .github/
          - .postgresql/
          - apps/
          - bootstrap/
          - dapr/
          - deployments/
          - iac/
          - kind-pki/
          - resources/ 
          - scripts/
          - cdk8s/
          - dist/
          - build/
          - "*.log"
          - ".DS_Store"
        # Configure sync behavior
        initialSync: mirrorLocal
        waitInitialSync: true
        # onUpload:
        #   # Don't restart container - Next.js handles its own hot reloading
        #   restartContainer: false

    # Open a terminal and use the following command to start it
    terminal:
      command: /workspace/devspace_start.sh
      workDir: /workspace
    
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
    
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "3000:3000"
        bindAddress: 0.0.0.0
      - port: "9229"           # Node.js debugger port
    
    # Open the following URLs once they return an HTTP status code other than 502 or 503
    open:
      - url: http://localhost:3000
    
    # Environment variables for development
    env:
      - name: NODE_ENV
        value: "development"
      - name: NEXTAUTH_URL
        value: "http://localhost:3000"
      - name: NEXT_PUBLIC_BASE_URL
        value: "http://localhost:3000"
      - name: NEXT_PUBLIC_BASE_PATH
        value: ""  # Override the invalid base path from configmap
      - name: NEXT_PUBLIC_ASSET_PREFIX
        value: ""  # Clear asset prefix for local dev

# Use the `commands` section to define repeatable dev workflows for this project 
commands:
  migrate-db:
    command: |-
      echo 'Running database migrations...'
      devspace enter -- pnpm run db:migrate
  
  logs:
    command: |-
      devspace logs -f
  
  restart:
    command: |-
      devspace enter -- pkill -f "node"
      echo "Restarted Next.js server"