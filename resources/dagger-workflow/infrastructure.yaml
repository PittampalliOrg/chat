# Combines the RBAC and WorkflowTemplate configurations
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflow
  namespace: argo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-workflow-role
  namespace: argo
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtemplates
  - workflowtemplaterefs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow-binding
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-workflow-role
subjects:
- kind: ServiceAccount
  name: argo-workflow
  namespace: argo
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: dagger-template
  namespace: argo
spec:
  securityContext:
    fsGroup: 1000
  serviceAccountName: argo-workflow
  volumes:
    - name: dagger-socket
      emptyDir: {}
    - name: dagger-storage
      emptyDir: {}
    - name: tmp-volume
      emptyDir: {}
  templates:
    - name: dagger-workflow-base
      sidecars:
        - name: dagger-engine
          image: registry.dagger.io/engine:v0.18.8
          securityContext:
            privileged: true
            runAsUser: 0
          readinessProbe:
            exec:
              command: ["sh", "-c", "test -S /run/dagger/engine.sock || false"]
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - { mountPath: /run/dagger, name: dagger-socket }
            - { mountPath: /var/lib/dagger, name: dagger-storage }
            - { mountPath: /tmp, name: tmp-volume }
      inputs:
        parameters:
          - name: dagger-module
            description: "Dagger module to use"
          - name: dagger-function
            description: "Dagger function to call"
          - name: source-repo
            description: "Git repository containing source code"
          - name: source-revision
            default: "main"
            description: "Git revision for source code"
        artifacts:
          - name: dagger-cli
            path: /usr/local/bin
            mode: 0755
            http:
              {
                url: "https://github.com/dagger/dagger/releases/download/v0.18.6/dagger_v0.18.6_linux_amd64.tar.gz",
              }
